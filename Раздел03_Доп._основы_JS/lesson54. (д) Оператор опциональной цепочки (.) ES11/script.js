'use strict';
// Lesson 54. (д) Оператор опциональной цепочки (?.) ES11

const box = document.querySelector('.box');
const block = document.querySelector('.block');
console.log(block);  // null

// Пример
// console.log(block.textContent);
// и далее у нас будет ошибка и код не выполнится
// console.log(1 + 2);    // error

//  и чтобы такого не было мы можем испо-ть условия
if (block) {
    console.log(block.textContent);
}
console.log(1 + 2);   // 3

// но это не очень удобно и тут на поможет оператор ?.
// Опциональная цепочка ?. — это безопасный способ доступа к свойствам вложенных объектов, 
// даже если какое-либо из промежуточных свойств не существует.
// Опциональная цепочка ?. останавливает вычисление и возвращает undefined, если значение перед ?. равно undefined или null.
// т.е. он не доходит до textContent и ошибка не появл-ся! И это позв-т избав-ся от if где это не нужно.
// console.log(block?.textContent);  // undefined

// но раб-т это только на чтение св-ва и если мы туда запишем что-то то будет ошибка!
// т.к. мы получ-м undefined и в него хотим записать что-то
// block?.textContent = '123';  // error

// Выше мы рассмотрели действия на стр-це, но макс польза от этого оператора будет когда мы начнем раб-ть с данными!
// Они могут приходить как от пользователя так и от сервера, и что именно прийдет мы не всегда можем знать
const userData = {
    name: 'Ivan',
    age: null,
    say: () => {
        console.log('Hello losser!');
    }
}; 
// console.log(userData.skills.js);  // error
// в коде выше мы получим ошибку, т.к. св-ва .skills не существует в обьекте, и чтобы не получать ошибку,
// наш код мог прод-ть работу далее и не иcпол-ть много if - мы испол-м ?.
console.log(userData.skills?.js);  // undefined
// И такие новые операторы позвол-т нам избавлятся от лишнего кода! Но пол-ся им нужно осторожно
// т.к. если мы не увидим ошибки в консоли мы не будет знать где у нас возникла ошибка!

// этим методом можно также и проверять и вызовы потен-но несущ-х функ-й, если такой нет верн-ся undefined
console.log(userData.hey?.());   // undefined
// userData.say();   // наш .log выпол-ся в обьекте
